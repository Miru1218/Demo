{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ObservableComponent {\n  constructor() {\n    this.observableDemo(); // 在建構子中調用函式\n    this.observableAsyncDemo(); // 在建構子中調用函式\n  }\n  static #_ = this.ɵfac = function ObservableComponent_Factory(t) {\n    return new (t || ObservableComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ObservableComponent,\n    selectors: [[\"app-observable\"]],\n    decls: 2,\n    vars: 0,\n    template: function ObservableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"observable works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n}\nobservableDemo();\n{\n  const source$ = new Observable(subscriber => {\n    console.log('stream 開始');\n    subscriber.next(1);\n    subscriber.next(2);\n    subscriber.next(3);\n    subscriber.next(4);\n    console.log('stream 結束');\n    subscriber.complete();\n  });\n  // 每次訂閱都是一次新的 stream\n  source$.subscribe({\n    next: data => console.log(`Observable 第一次訂閱: ${data}`),\n    complete: () => console.log('第一次訂閱完成')\n  });\n  source$.subscribe({\n    next: data => console.log(`Observable 第二次訂閱: ${data}`),\n    complete: () => console.log('第二次訂閱完成')\n  });\n}\n// Observable with async\nconst observableAsyncDemo = () => {\n  const source$ = new Observable(subscriber => {\n    console.log('stream 開始');\n    subscriber.next(1);\n    subscriber.next(2);\n    subscriber.next(3);\n    setTimeout(() => {\n      subscriber.next(4);\n      subscriber.complete();\n      console.log('stream 結束');\n    });\n  });\n  // 每次訂閱都是一次新的 stream\n  source$.subscribe({\n    next: data => console.log(`Observable 第一次訂閱: ${data}`),\n    complete: () => console.log('第一次訂閱完成')\n  });\n  source$.subscribe({\n    next: data => console.log(`Observable 第二次訂閱: ${data}`),\n    complete: () => console.log('第二次訂閱完成')\n  });\n};\nconsole.log('練習使用 new Observable 加上非同步範例');\nobservableAsyncDemo();","map":{"version":3,"names":["Observable","ObservableComponent","constructor","observableDemo","observableAsyncDemo","_","_2","selectors","decls","vars","template","ObservableComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","source$","subscriber","console","log","next","complete","subscribe","data","setTimeout"],"sources":["D:\\Demo\\src\\app\\observable\\observable.component.ts","D:\\Demo\\src\\app\\observable\\observable.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-observable',\n  templateUrl: './observable.component.html',\n  styles: []\n})\nexport class ObservableComponent {\n\n  constructor() {\n    this.observableDemo(); // 在建構子中調用函式\n    this.observableAsyncDemo(); // 在建構子中調用函式\n  }\n  }\n\n  observableDemo() {\n    const source$ = new Observable(subscriber => {\n      console.log('stream 開始');\n      subscriber.next(1);\n      subscriber.next(2);\n      subscriber.next(3);\n      subscriber.next(4);\n      console.log('stream 結束');\n      subscriber.complete();\n    });\n\n    // 每次訂閱都是一次新的 stream\n    source$.subscribe({\n      next: data => console.log(`Observable 第一次訂閱: ${data}`),\n      complete: () => console.log('第一次訂閱完成')\n    });\n    source$.subscribe({\n      next: data => console.log(`Observable 第二次訂閱: ${data}`),\n      complete: () => console.log('第二次訂閱完成')\n    });\n  }\n\n  // Observable with async\nconst observableAsyncDemo = () => {\n  const source$ = new Observable(subscriber => {\n    console.log('stream 開始');\n    subscriber.next(1);\n    subscriber.next(2);\n    subscriber.next(3);\n    setTimeout(() => {\n      subscriber.next(4);\n      subscriber.complete();\n      console.log('stream 結束');\n    });\n  });\n\n  // 每次訂閱都是一次新的 stream\n  source$.subscribe({\n    next: data => console.log(`Observable 第一次訂閱: ${data}`),\n    complete: () => console.log('第一次訂閱完成')\n  });\n  source$.subscribe({\n    next: data => console.log(`Observable 第二次訂閱: ${data}`),\n    complete: () => console.log('第二次訂閱完成')\n  });\n};\nconsole.log('練習使用 new Observable 加上非同步範例');\nobservableAsyncDemo();\n\n}\n","<p>observable works!</p>\n"],"mappings":"AACA,SAASA,UAAU,QAAQ,MAAM;;AAOjC,OAAM,MAAOC,mBAAmB;EAE9BC,YAAA;IACE,IAAI,CAACC,cAAc,EAAE,CAAC,CAAC;IACvB,IAAI,CAACC,mBAAmB,EAAE,CAAC,CAAC;EAC9B;EAAC,QAAAC,CAAA,G;qBALUJ,mBAAmB;EAAA;EAAA,QAAAK,EAAA,G;UAAnBL,mBAAmB;IAAAM,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRhCE,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,wBAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;;ADgBtBd,cAAc,EAAE;AAAC;EACf,MAAMe,OAAO,GAAG,IAAIlB,UAAU,CAACmB,UAAU,IAAG;IAC1CC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBF,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;IAClBH,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;IAClBH,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;IAClBH,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;IAClBF,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBF,UAAU,CAACI,QAAQ,EAAE;EACvB,CAAC,CAAC;EAEF;EACAL,OAAO,CAACM,SAAS,CAAC;IAChBF,IAAI,EAAEG,IAAI,IAAIL,OAAO,CAACC,GAAG,CAAC,qBAAqBI,IAAI,EAAE,CAAC;IACtDF,QAAQ,EAAEA,CAAA,KAAMH,OAAO,CAACC,GAAG,CAAC,SAAS;GACtC,CAAC;EACFH,OAAO,CAACM,SAAS,CAAC;IAChBF,IAAI,EAAEG,IAAI,IAAIL,OAAO,CAACC,GAAG,CAAC,qBAAqBI,IAAI,EAAE,CAAC;IACtDF,QAAQ,EAAEA,CAAA,KAAMH,OAAO,CAACC,GAAG,CAAC,SAAS;GACtC,CAAC;;AAGJ;AACF,MAAMjB,mBAAmB,GAAGA,CAAA,KAAK;EAC/B,MAAMc,OAAO,GAAG,IAAIlB,UAAU,CAACmB,UAAU,IAAG;IAC1CC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBF,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;IAClBH,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;IAClBH,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;IAClBI,UAAU,CAAC,MAAK;MACdP,UAAU,CAACG,IAAI,CAAC,CAAC,CAAC;MAClBH,UAAU,CAACI,QAAQ,EAAE;MACrBH,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF;EACAH,OAAO,CAACM,SAAS,CAAC;IAChBF,IAAI,EAAEG,IAAI,IAAIL,OAAO,CAACC,GAAG,CAAC,qBAAqBI,IAAI,EAAE,CAAC;IACtDF,QAAQ,EAAEA,CAAA,KAAMH,OAAO,CAACC,GAAG,CAAC,SAAS;GACtC,CAAC;EACFH,OAAO,CAACM,SAAS,CAAC;IAChBF,IAAI,EAAEG,IAAI,IAAIL,OAAO,CAACC,GAAG,CAAC,qBAAqBI,IAAI,EAAE,CAAC;IACtDF,QAAQ,EAAEA,CAAA,KAAMH,OAAO,CAACC,GAAG,CAAC,SAAS;GACtC,CAAC;AACJ,CAAC;AACDD,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;AAC1CjB,mBAAmB,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}